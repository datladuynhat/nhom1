@model FiveTeam.Models.ProductFiveTeam

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
}
<style>

    .form-horizontal, h2, h4 {
        width: 50%;
        margin: 0 auto;
        line-height: 1.5rem; /* Dòng chữ được căn giữa theo chiều cao của icon */
        border-radius: .5rem; /* Bo tròn góc của icon */
        background: #eee; /* Màu nền của icon là xám nhạt */
        color: var(--black); /* Màu chữ là màu đen */
        font-size: 1.5rem; /* Kích thước font chữ là 2rem */
        font-weight: bolder;
    }

    .form-group {
        margin-bottom: 5px;
    }

    .control-label {
        text-align: right;
    }

    .col-md-10 {
        padding: 8px;
        border-bottom: 1px solid #ddd;
    }

    .form-control {
        background-color: #eee;
        font-size: 1.5rem;
    }

        .form-control:hover {
            color: var(--orange);
            cursor: pointer;
            color: #FF8C00;
        }
    /* Định dạng nút */
    .default {
        margin-top: 0.5rem; /* Khoảng cách từ trên xuống của nút là 1rem */
        display: inline-block; /* Hiển thị là khối inline */
        padding: .3rem 5rem; /* Khoảng cách padding trên và dưới là .8rem, bên trái và bên phải là 3rem */
        font-size: 1.7rem; /* Kích thước chữ là 1.7rem */
        border-radius: .5rem; /* Bo góc của nút là .5rem */
        border: .2rem solid var(--black); /* Viền của nút là đường viền đen có độ dày .2rem */
        cursor: pointer; /* Con trỏ là hình bàn tay khi di chuột vào nút */
        background: none;
        font-weight: bolder;
        color: #FF8C00;
    }

        /* Hiệu ứng hover cho nút */
        .default:hover {
            background: var(--orange); /* Màu nền khi hover là màu cam */
            color: #fff; /* Màu chữ khi hover là màu trắng */
        }

    h3 {
        width: 50%; /* Đặt chiều rộng mong muốn của bảng */
        margin: 0 auto;
        font-size: 3rem;
        font-weight: bolder;
        color: #FF8C00;
    }

    .btn-default {
        color: #FF8C00;
    }
</style>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
<h1 class="heading"> Create <span>Products</span> </h1>
<h3>The Five Team</h3>

@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Productcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Productcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Productcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="fileAnh" class="form-control" />
                @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 ">
                <input type="submit" value="Create" class="default" />
            </div>

            <div class="col-md-offset-2 ">
                @Html.ActionLink("Back to List", "ListProduct", null, new { @class = "btn btn-default" })
            </div>

        </div>
    </div>
}

